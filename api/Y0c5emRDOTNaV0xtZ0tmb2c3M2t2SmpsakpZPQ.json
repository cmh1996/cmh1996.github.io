{"title":"web性能优化","date":"2017-08-04T16:00:00.000Z","author":"Chambers","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1521386244318&di=ba515e2ee8cde9353d2688b418293892&imgtype=0&src=http%3A%2F%2Fimg.dongqiudi.com%2Fuploads9%2Fallimg%2F160125%2F492-160125122514317.jpg","excerpt":"","slug":"web性能优化","comments":true,"dropcap":true,"tags":["js","性能优化"],"categories":["js"],"updated":"2018-03-18T12:29:38.899Z","content":"<h3 id=\"web性能优化\"><a href=\"#web性能优化\" class=\"headerlink\" title=\"web性能优化\"></a>web性能优化</h3><p>1.CDN</p>\n<p>2.CSS不要过多使用*，因为他的选择器匹配原则是从右到左</p>\n<p>3.压缩代码</p>\n<p>4.减少http请求</p>\n<p>5.预加载，预渲染：增加 rel=”prefetch”,rel=”dns-prefetch”，或者 rel=”prerender” 标记，详情：（<a href=\"http://web.jobbole.com/84256/）\" target=\"_blank\" rel=\"noopener\">http://web.jobbole.com/84256/）</a></p>\n<p>6.WebAssembly</p>\n<p>7.webpack打包优化</p>\n<p>8.懒加载</p>\n<p>9.合理使用缓存，localstorage,sessionstorage</p>\n<p>10.启用Http2</p>\n<p>11.同构，服务端渲染</p>\n<p>12.service workers</p>\n<p>13.Gzip</p>\n<p>14.将 CSS 样式放在页面的上方，将脚本移动到底部（包括内联的）</p>\n<p>15.雪碧图，字体图标</p>\n<p>16.图像优化</p>\n<p>17.防抖和节流</p>\n<p>18.减少 DOM 操作的次数，避免不必要的重排和重绘</p>\n<p>19.动画合理使用translate3d,opacity来启用单独图层渲染</p>\n<p>20.使用 requestAnimationFrame 来更新页面</p>\n<p>21.可以给 JavaScript 加上 async 标记，表示 JavaScript 的执行不会读取 DOM ，JavaScript 可以不被 CSS 阻塞，可以在空闲时间立刻执行。（正常来说在浏览器没有下载并解析完成使用 link 引入的 CSS 文件之前，JavaScript 是不会执行的）（defer 跟 async 非常相似，不会阻塞页面加载，但会等到 HTML 完成解析后再执行，并且会按出现的次序执行。）</p>\n","prev":{"title":"Three.js笔记","slug":"Three.js笔记"},"next":{"title":"jQuery源码解读——笔记","slug":"jQuery源码解读笔记"}}