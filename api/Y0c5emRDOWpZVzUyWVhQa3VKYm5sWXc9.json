{"title":"canvas世界","date":"2018-10-28T16:00:00.000Z","author":"Chambers","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1540309211036&di=f63653ce49168dce6c0bba026cf623b2&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fforum%2Fw%3D580%2Fsign%3D1369fd766f224f4a5799731b39f69044%2Fed57ed1f4134970a91dc9b7f97cad1c8a6865db3.jpg","excerpt":"","slug":"canvas世界","comments":true,"dropcap":false,"tags":["canvas"],"categories":["canvas"],"updated":"2018-10-23T15:35:35.775Z","content":"<h2 id=\"一、基础详解\"><a href=\"#一、基础详解\" class=\"headerlink\" title=\"一、基础详解\"></a>一、基础详解</h2><h3 id=\"1-画线\"><a href=\"#1-画线\" class=\"headerlink\" title=\"1.画线\"></a>1.画线</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;canvas id=&quot;canvas&quot; width=&quot;500&quot; height=&quot;500&quot; &gt;&lt;/canvas&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">var canvas1 = document.getElementById(&quot;canvas&quot;);</span><br><span class=\"line\">var ctx = canvas1.getContext(&apos;2d&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">ctx.moveTo(100,100);</span><br><span class=\"line\">ctx.lineTo(300,300);</span><br><span class=\"line\">ctx.lineTo(400,300);</span><br><span class=\"line\">ctx.lineWidth = 10; //线粗</span><br><span class=\"line\">ctx.strokeStyle = &apos;green&apos;;  //stroke的颜色</span><br><span class=\"line\">ctx.stroke();</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"2-要想独立开每个图形，可以用beginPath-来声明新路径的开始，否则，后面的状态会覆盖前面的状态\"><a href=\"#2-要想独立开每个图形，可以用beginPath-来声明新路径的开始，否则，后面的状态会覆盖前面的状态\" class=\"headerlink\" title=\"2.要想独立开每个图形，可以用beginPath()来声明新路径的开始，否则，后面的状态会覆盖前面的状态\"></a>2.要想独立开每个图形，可以用beginPath()来声明新路径的开始，否则，后面的状态会覆盖前面的状态</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.beginPath();</span><br><span class=\"line\">...</span><br><span class=\"line\">ctx.stroke();</span><br><span class=\"line\">ctx.beginPath();</span><br><span class=\"line\">...</span><br><span class=\"line\">ctx.stroke();</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"3-绘制封闭的多边形，用beginPath-和closePath\"><a href=\"#3-绘制封闭的多边形，用beginPath-和closePath\" class=\"headerlink\" title=\"3.绘制封闭的多边形，用beginPath()和closePath();\"></a>3.绘制封闭的多边形，用beginPath()和closePath();</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.beginPath();</span><br><span class=\"line\">...</span><br><span class=\"line\">ctx.closePath();</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"4-填充颜色\"><a href=\"#4-填充颜色\" class=\"headerlink\" title=\"4.填充颜色\"></a>4.填充颜色</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.fillStyle = &apos;green&apos;;</span><br><span class=\"line\">ctx.fill();</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"5-矩形绘制\"><a href=\"#5-矩形绘制\" class=\"headerlink\" title=\"5.矩形绘制\"></a>5.矩形绘制</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.rect(x,y,width,height);   //(左上角x坐标，左上角y坐标，宽，高)</span><br><span class=\"line\"></span><br><span class=\"line\">//下面更加方便的，上面的还要stroke或者fill：</span><br><span class=\"line\">ctx.fillRect(x,y,width,height);</span><br><span class=\"line\">ctx.strokeRect(x,y,width,height);</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"6-线帽\"><a href=\"#6-线帽\" class=\"headerlink\" title=\"6.线帽\"></a>6.线帽</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.lineCap = &apos;butt&apos;;     //一般，不突出</span><br><span class=\"line\">ctx.lineCap = &apos;round&apos;;    //圆形</span><br><span class=\"line\">ctx.lineCap = &apos;square&apos;;   //方形</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"7-五角星\"><a href=\"#7-五角星\" class=\"headerlink\" title=\"7.五角星\"></a>7.五角星</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function drawStar(ctx,r,R,x,y,rot)&#123;</span><br><span class=\"line\">    ctx.beginPath();</span><br><span class=\"line\">    for(var i=0;i&lt;5;i++)&#123;</span><br><span class=\"line\">        ctx.lineTo(Math.cos((18 + i*72 - rot)/180 * Math.PI) * R + x,</span><br><span class=\"line\">                    -Math.sin((18 + i*72 - rot)/180 * Math.PI) * R + y);</span><br><span class=\"line\">        ctx.lineTo(Math.cos((54 + i*72 - rot)/180 * Math.PI) * r + x,</span><br><span class=\"line\">                    -Math.sin((54 + i*72 - rot)/180 * Math.PI) * r + y);         </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ctx.closePath();</span><br><span class=\"line\">    ctx.stroke();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"8-线条交界处的表现形式\"><a href=\"#8-线条交界处的表现形式\" class=\"headerlink\" title=\"8.线条交界处的表现形式\"></a>8.线条交界处的表现形式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.lineJoin=&quot;miter|bevel|round&quot;;//（尖角(默认)，斜角，圆角）</span><br><span class=\"line\">ctx.miterLimit = 10;//（限制尖角的延伸，超过10就变成斜角）</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"9-图形变换（效果会叠加）\"><a href=\"#9-图形变换（效果会叠加）\" class=\"headerlink\" title=\"9.图形变换（效果会叠加）\"></a>9.图形变换（效果会叠加）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.translate(x,y);   //左上角的原点移动到（x,y）处</span><br><span class=\"line\">ctx.rotate(deg);  //旋转</span><br><span class=\"line\">ctx.scale(sx,sy); //缩放（它不仅放大宽高，他还放大坐标、线宽！！）</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"10-设置变换矩阵（略）\"><a href=\"#10-设置变换矩阵（略）\" class=\"headerlink\" title=\"10.设置变换矩阵（略）\"></a>10.设置变换矩阵（略）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.transform(a,b,c,d,e,f);</span><br><span class=\"line\">ctx.setTransform(a,b,c,d,e,f);</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"11-状态保存还原\"><a href=\"#11-状态保存还原\" class=\"headerlink\" title=\"11.状态保存还原\"></a>11.状态保存还原</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.save();</span><br><span class=\"line\">...</span><br><span class=\"line\">ctx.restore();</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"12-渐变\"><a href=\"#12-渐变\" class=\"headerlink\" title=\"12.渐变\"></a>12.渐变</h3><p>线性渐变<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var grd = ctx.createLinearGradient(xstart,ystart,xend,yend);      //创建线性渐变</span><br><span class=\"line\">grd.addColorStop(stop,color);     //在某个位置创建某种颜色</span><br></pre></td></tr></table></figure></p>\n<p>径向渐变<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var grd = ctx.createRadialGradient(x0,y0,r0,x1,y1,r1);      //创建径向渐变</span><br><span class=\"line\">grd.addColorStop(stop,color);     //在某个位置创建某种颜色</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"13-创建样式\"><a href=\"#13-创建样式\" class=\"headerlink\" title=\"13.创建样式\"></a>13.创建样式</h3><p>图片型样式，第一个参数是一个img或者canvas或者video，第二个参数是’no-repeat’’repeat-x’’repeat-y’’repeat’<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var pattern = createPattern(type,repeat-style);</span><br><span class=\"line\">ctx.fillStyle = pattern;</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"14-圆弧\"><a href=\"#14-圆弧\" class=\"headerlink\" title=\"14.圆弧\"></a>14.圆弧</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.arc(圆心x，圆心y，r，起始度数，结束度数，顺时针为false|逆时针为true)</span><br><span class=\"line\">ctx.moveTo(x0,y0);</span><br><span class=\"line\">ctx.arcTo(x1,y1,x2,y2,r);     //x0,y0是起始点，x1,y1是控制点，x2,y2是结束点</span><br><span class=\"line\"></span><br><span class=\"line\">//顺逆时针分别画圆</span><br><span class=\"line\">function draw(ctx, x) &#123;</span><br><span class=\"line\">    ctx.clearRect(0, 0, 500, 500);</span><br><span class=\"line\">    if (x &lt; Math.PI*2) &#123;</span><br><span class=\"line\">        x += 0.05;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        x = 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ctx.beginPath();</span><br><span class=\"line\">    ctx.strokeStyle = &apos;#ff4444&apos;;</span><br><span class=\"line\">    ctx.arc(80, 80, 50, 0, x, false); // 顺时针</span><br><span class=\"line\">    ctx.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">    ctx.beginPath();</span><br><span class=\"line\">    ctx.strokeStyle = &apos;#000&apos;;</span><br><span class=\"line\">    ctx.arc(200, 80, 50, 0, Math.PI*2 - x, true); // 逆时针</span><br><span class=\"line\">    ctx.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">    requestAnimationFrame(function () &#123;</span><br><span class=\"line\">        draw(ctx, x);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">draw(ctx, 0);</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"15-弯月示例\"><a href=\"#15-弯月示例\" class=\"headerlink\" title=\"15.弯月示例\"></a>15.弯月示例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.arc(400,400,300,0.5*Math.PI,1.5*Math.PI,true);  //月亮的外弯</span><br><span class=\"line\">ctx.moveTo(400,100);</span><br><span class=\"line\">ctx.arcTo(1200,400,400,700,(400-100)*dis(400,100,1200,400)/(1200-400));     //月亮的内弯</span><br><span class=\"line\">ctx.stroke();</span><br><span class=\"line\">function dis(x1,y1,x2,y2)&#123;</span><br><span class=\"line\">    return Math.sqrt((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2));</span><br><span class=\"line\">&#125;   //计算内弯半径</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"16-用贝塞尔曲线绘制\"><a href=\"#16-用贝塞尔曲线绘制\" class=\"headerlink\" title=\"16.用贝塞尔曲线绘制\"></a>16.用贝塞尔曲线绘制</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.moveTo(x0,y0);</span><br><span class=\"line\"></span><br><span class=\"line\">//贝塞尔二次曲线，x0,y0是起始点，x1,y1是控制点，x2,y2是结束点</span><br><span class=\"line\">ctx.quadraticCurveTo(x1,y1,x2,y2);  </span><br><span class=\"line\"></span><br><span class=\"line\">//贝塞尔三次曲线，x0,y0是起始点，x1,y1是控制点，x2,y2是控制点，x3,y3是结束点  </span><br><span class=\"line\">ctx.bezierCurveTo(x1,y1,x2,y2,x3,y3);</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"17-文字\"><a href=\"#17-文字\" class=\"headerlink\" title=\"17.文字\"></a>17.文字</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var pattern = ctx.createPattern(img,&apos;repeat&apos;);</span><br><span class=\"line\">ctx.fillStyle = pattern;      //这样可以把图片样式应用在文字上</span><br><span class=\"line\">ctx.font = &apos;normal|italic|oblique     //font-style:普通，斜体字，倾斜字体</span><br><span class=\"line\">            normal|small-caps         //font-variant:普通，字母样式改变</span><br><span class=\"line\">            normal|lighter|bold|bolder    //font-weight:普通，细，加粗，更粗（但是浏览器渲染只有normal和bold两种表现形式）</span><br><span class=\"line\">            40px </span><br><span class=\"line\">            Arial&apos;;</span><br><span class=\"line\">ctx.textAlign = &apos;left|center|right&apos;;  //文本左右对齐</span><br><span class=\"line\">ctx.textBaseline = &apos;top|middle|bottom|alphabetic|ideographic&apos;;  //文本上下对齐</span><br><span class=\"line\">ctx.fillText(string,x,y,maxWidth);</span><br><span class=\"line\">ctx.strokeText(string,x,y,maxWidth);</span><br><span class=\"line\">ctx.measureText(string).width;    //度量传入字符串在页面中渲染出来的宽度</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"18-阴影\"><a href=\"#18-阴影\" class=\"headerlink\" title=\"18.阴影\"></a>18.阴影</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.shadowColor = &apos;black&apos;;    //阴影颜色</span><br><span class=\"line\">ctx.shadowOffsetX = 20;       //阴影水平偏移</span><br><span class=\"line\">ctx.shadowOffsetY = 20;       //阴影垂直偏移</span><br><span class=\"line\">ctx.shadowBlur = 10;          //阴影模糊度</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"19-全局透明度\"><a href=\"#19-全局透明度\" class=\"headerlink\" title=\"19.全局透明度\"></a>19.全局透明度</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.globalAlpha = 0.6;  //1是默认不透明</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"20-覆盖时产生的效果\"><a href=\"#20-覆盖时产生的效果\" class=\"headerlink\" title=\"20.覆盖时产生的效果\"></a>20.覆盖时产生的效果</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//默认后面的覆盖前面的|前面的覆盖后面的（还有很多，详情上网看）</span><br><span class=\"line\">ctx.globalCompositeOperation = &apos;source-over|destination-over&apos;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"21-裁剪\"><a href=\"#21-裁剪\" class=\"headerlink\" title=\"21.裁剪\"></a>21.裁剪</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.clip();</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"22-利用非零环绕原则实现剪纸效果\"><a href=\"#22-利用非零环绕原则实现剪纸效果\" class=\"headerlink\" title=\"22.利用非零环绕原则实现剪纸效果\"></a>22.利用非零环绕原则实现剪纸效果</h3><p>（从需要判断的区域射一条线到外面，经过的线条方向不一致那就是属于图形外，否则就是图形内）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.beginPath();</span><br><span class=\"line\">ctx.arc(400,400,300,0,Math.PI*2,false);</span><br><span class=\"line\">ctx.arc(400,400,150,0,Math.PI*2,true);</span><br><span class=\"line\">ctx.closePath();</span><br><span class=\"line\">ctx.fillStyle = &apos;#058&apos;;</span><br><span class=\"line\">ctx.shadowColor = &apos;grey&apos;;</span><br><span class=\"line\">ctx.shadowOffsetX = 10;</span><br><span class=\"line\">ctx.shadowOffsetY = 10;</span><br><span class=\"line\">ctx.shadowBlur = 10;</span><br><span class=\"line\">ctx.fill();</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"23-判断鼠标所在位置是否在指定目标中\"><a href=\"#23-判断鼠标所在位置是否在指定目标中\" class=\"headerlink\" title=\"23.判断鼠标所在位置是否在指定目标中\"></a>23.判断鼠标所在位置是否在指定目标中</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var x = e.clientX - canvas.getBoundingClientRect().left;  //获取鼠标在canvas中的x位置</span><br><span class=\"line\">var y = e.clientY - canvas.getBoundingClientRect().top;   //获取鼠标在canvas中的y位置</span><br><span class=\"line\">ctx.isPointInPath(x,y);   //在绘制图形内就为true，否则为false</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"24-扩展context\"><a href=\"#24-扩展context\" class=\"headerlink\" title=\"24.扩展context\"></a>24.扩展context</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CanvasRenderingContext2D.prototype.fillStar = function()&#123;...&#125;</span><br><span class=\"line\">//可以这样来记录上一个moveTo的点的地方</span><br><span class=\"line\">var originalMoveTo = CanvasRenderingContext2D.prototype.moveTo;</span><br><span class=\"line\">CanvasRenderingContext2D.prototype.lastMoveToLoc = &#123;&#125;;</span><br><span class=\"line\">CanvasRenderingContext2D.prototype.moveTo = function(x,y)&#123;</span><br><span class=\"line\">  originalMoveTo.apply(this,[x,y]);</span><br><span class=\"line\">  this.lastMoveToLoc.x = x;    </span><br><span class=\"line\">  this.lastMoveToLoc.y = y; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"25-IE6-7-8的兼容问题\"><a href=\"#25-IE6-7-8的兼容问题\" class=\"headerlink\" title=\"25.IE6,7,8的兼容问题\"></a>25.IE6,7,8的兼容问题</h3><p>用explorecanvas</p>\n<hr>\n<h3 id=\"26-Canvas图形库\"><a href=\"#26-Canvas图形库\" class=\"headerlink\" title=\"26.Canvas图形库\"></a>26.Canvas图形库</h3><p>canvasplus：https:code.google.com/p/canvasplus/</p>\n<p>artisan js：http:artisanjs.com/</p>\n<p>Rgraph：https:roopons.com.au/wp-content/plugins/viral-optins/js/rgraph/</p>\n<hr>\n<h3 id=\"27-获取图像像素\"><a href=\"#27-获取图像像素\" class=\"headerlink\" title=\"27.获取图像像素\"></a>27.获取图像像素</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var imageData = ctx.getImageData(x,y,w,h);</span><br><span class=\"line\">imageData.width;</span><br><span class=\"line\">imageData.height;</span><br><span class=\"line\">imageData.data;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"28-置入图像数据\"><a href=\"#28-置入图像数据\" class=\"headerlink\" title=\"28.置入图像数据\"></a>28.置入图像数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.putImageData(imageData,dx,dy,dirtyX,dirtyY,dirtyW,dirtyH)</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"29-创建imageData\"><a href=\"#29-创建imageData\" class=\"headerlink\" title=\"29.创建imageData\"></a>29.创建imageData</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var imageData = ctx.createImageData(w,h);</span><br></pre></td></tr></table></figure>","next":{"title":"深入浅出Rxjs学习笔记","slug":"深入浅出Rxjs学习笔记"}}