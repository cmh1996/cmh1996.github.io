{"title":"前端数据流管理模式（二）——Redux篇","date":"2018-04-29T16:00:00.000Z","author":"Chambers","thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1524652630664&di=23d9d07af5ac73567091c176ab06cda5&imgtype=0&src=http%3A%2F%2Fbpic.ooopic.com%2F16%2F72%2F90%2F16729077-e888256f82a58a5d8d62ddb535fd0f5d.jpg","excerpt":"","slug":"前端数据流管理模式（二）——Redux篇","comments":true,"dropcap":false,"tags":["js","前端数据流"],"categories":["js"],"updated":"2018-04-26T09:38:07.319Z","content":"<h2 id=\"Redux\"><a href=\"#Redux\" class=\"headerlink\" title=\"Redux\"></a>Redux</h2><p><img src=\"https://pic4.zhimg.com/v2-657d3433e0e6b2b8a029aa7bc331a841_r.jpg\" alt=\"Redux流程示意图\"></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/25800767\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/p/25800767</a></p>\n<hr>\n<h3 id=\"Redux和Flux的区别\"><a href=\"#Redux和Flux的区别\" class=\"headerlink\" title=\"Redux和Flux的区别\"></a>Redux和Flux的区别</h3><ol>\n<li>Redux只有一个store，且在reducer中执行更新逻辑；Flux有多个store且在store中执行更新逻辑。</li>\n<li>Redux没有dispatcher，它是通过reducer来处理数据（reducer是一个纯函数，(prevState,action)=&gt;newState）。在Redux中可能有多个reducer，单个reducer负责维护应用整体state树中的某一部分，多个reducer通过combineReducers合成一个根reducer来维护整个state。</li>\n</ol>\n<hr>\n<h4 id=\"——开坑中，稍安勿躁-╯□╰-——\"><a href=\"#——开坑中，稍安勿躁-╯□╰-——\" class=\"headerlink\" title=\"——开坑中，稍安勿躁( ╯□╰ )——\"></a>——开坑中，稍安勿躁( ╯□╰ )——</h4>","prev":{"title":"前端数据流管理模式（三）——Vuex篇（附源码解析）","slug":"前端数据流管理模式（三）——Vuex篇（附源码解析）"},"next":{"title":"前端数据流管理模式（一）——Flux篇","slug":"前端数据流管理模式（一）——Flux篇"}}